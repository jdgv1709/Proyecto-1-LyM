/*
Gramatica para el Robot:
Autor: Alejandro Arango
Modificado por: Silvia Takahashi
Modificado por: Juan Pablo Morales.
Agregadas producciones para manejar globos
Modificado por Silvia Takahashi

Juan Galan
Camilo Rey
 **/


options 
{
  
	LOOKAHEAD=1; 
	IGNORE_CASE=true;
	STATIC = false;
	
}
   

PARSER_BEGIN(Robot)

package uniandes.lym.robot.control;

import uniandes.lym.robot.kernel.*;
import uniandes.lym.robot.view.Console;
 
import java.awt.Point;
import java.io.*;
import java.util.Vector;
import java.util.LinkedList;
import java.util.ArrayList;

@SuppressWarnings("serial")
public class Robot 
{
	ArrayList <String> variables = new ArrayList <String> ();
    ArrayList <String> funciones = new ArrayList <String> ();
 	ArrayList <String> funciones_parametros = new ArrayList <String> ();

	private RobotWorldDec world;
	
	
	void setWorld(RobotWorld w) {
		world = (RobotWorldDec) w;	
	}

	String salida=new String();
}
PARSER_END(Robot)

SKIP:
{
	" "
	|	"\r"
	|	"\t"
	| "\n"
}

TOKEN: {
  < EXEC:"EXEC" >
| < NEW:"new" >
}

TOKEN: {
  < VAR:"var" >
| < MACRO:"macro" >
| < IGUAL:"=" >
}

TOKEN: {
  < LBRACKET:"{" >
| < RBRACKET:"}" >
| < LPARENTESIS:"(" >
| < RPARENTESIS:")">
| < COMMA:"," > }

TOKEN: {
  < RIGHT:"RIGHT" >
| < LEFT:"LEFT" >
| < BACK:"BACK" >
| < NORTH:"NORTH" >
| < SOUTH:"SOUTH" >
| < EAST:"EAST" >
| < WEST:"WEST" >
| < FORWARD:"FORWARD" >
| < BACKWARD:"BACKWARD" >
	}

TOKEN: /* Nombres de Comandos */
{

			<TURNTOMY:  "turnToMy">
		| 	<TURNTOTHE: "turnToThe">
		| 	<WALK: "WALK">
		| 	<JUMP: "JUMP">
		|  < POP: "Pop" >
		|  <DROP: "DROP" >
        |  < PICK:  "PICK" >
        | < GRAB:"GRAB" >
        | < LETGO:"letGo" >
        | < MOVES:"MOVES">
        | < NOP:"NOP" >
        | < SAFEEXE:"safeExe" >	

}

TOKEN:
{
		<BALLOONS:  "myBALLOONS" >
		| <CHIPS:  "mYCHIPS"  >
		| <SIZE:"SIZE" >
		| < MYX:"MYX" >
		| < MYY:"MYY" >
		| < BALLONSHERE:"ballonsHere" >
		| < CHIPSHERE:"chipsHere" >
		| < ROOM:"roomForChips" >

}

TOKEN:
{
  < IF:"IF" >
| < THEN:"THEN" >
| < ELSE:"ELSE" >
| < FI:"FI" >
| < DO:"DO" >
| < OD:"OD" >
| < REP:"REP" >
| < TIMES:"TIMES" >
| < PER:"PER" >
}

TOKEN:
{
  < BLOCKED:"isBlocked?" >
| < FACING:"isFacing?" >
| < ZERO:"zero?" >
| < NOT:"NOT" >
}

TOKEN: {
  < SEMICOLON:";" >
}

TOKEN :
{
  < LETTERS : (<LETTER>)+ >
| < #LETTER : ["a"-"z", "A"-"Z"] > 
}


TOKEN :
{
		<NUM: (<DIGIT>)+ >
		|  	<#DIGIT: ["0"-"9"] >
        
}

//PARSER
void variable_definition() :
{
  Token variableName;
}
{
  < NEW > < VAR > variableName = < LETTERS > < NUM >
  {
    //variables.add(variableName.image);
    System.out.println("Variable definida: " + variableName.image);
  }
}

	//boolean command(uniandes.lym.robot.view.Console sistema) :
	
	boolean command(Console sistema):
	{	
		
		int x,y;
		Token variableName=null;
		salida=new String();	
	}

	
	{
		(		  (
		   <WALK> "(" x=num() ")" {world.moveForward(x,false);salida = "Command: Moveforward";}
		| 	<TURNTOMY>  "("(
			< RIGHT > { world.turnRight();salida = "Command: right ";}  
	    | < BACK > { world.turnRight(); world.turnRight();salida = "Command: right ";} 
		  ) ")"
				 
		/*| 	<HOP>  "(" x=num() ")" {world.moveForward(x,true);salida = "Command:Jumpforward ";}
		| 	<GO>  "(" x=num() "," y=num()")" {world.setPostion(x,y);salida = "Command:GO ";}  
		|  <PUT> "("  put() ")"					  			
		|  <PICK> "(" get()  ")"	
	    |  < POP > "(" x=num() ")" {world.popBalloons(x); salida = "Comando:  Pop";}*/
		) ";" 

		{
		    try {
	    			 Thread.sleep(900);
	    	    } catch (InterruptedException e) {
	    			        System.err.format("IOException: %s%n", e);
	    		    }
	    			 
			sistema.printOutput(salida);
			return true;
		})+

    	| <EOF> {return false;} 
	}

	void put() :
	{
		int f=1;	
	}
	{
		( <CHIPS>    "," f=num() {world.putChips(f); salida = "Command:  Put Chips"; })
		|  	  ( <BALLOONS>   "," f=num() {world.putBalloons(f); salida = "Command:  Put Balloons";})	 

	}

	void get() :
	{
		int f=1;	
	}
	{
		( <CHIPS>   "," f=num() {world.pickChips(f);salida = "Command:  Pick chips";})
		|  	  ( <BALLOONS>   "," f=num() {world.grabBalloons(f);salida="Command:  Pick balloons";})	 

	}

	
	

	/**
	 * Unsigned decimal number
	 * @return the corresponding value of the string
	 * @error  corresponding value is too large
	 */

	int num() throws Error:
	{	
		int total=1;
	}
	{
		<NUM>
		{
			try 
			{
				total = Integer.parseInt(token.image);
			} 
			catch (NumberFormatException ee) 
			{
				throw new Error("Number out of bounds: "+token.image+" !!");
			}
			return total;
		}
	}

	